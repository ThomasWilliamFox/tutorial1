---
title: "tutorial_1_canada_elections"
author: "Thomas Fox"
format: html
---

```{r}
#### Preamble ####
# Purpose: Read in data from the 2021 Canadian Election and make
# a graph of the number of seats each party won.
# Author: Thomas Fox
# Email: thomas.fox@mail.utoronto.ca
# Date: 9 January 2024
# Prerequisites: Know where to get Canada's elections data.
```

```{r}
#### Workspace setup ####
install.packages("tidyverse")
install.packages("janitor")

library(tidyverse)
library(janitor)
```

```{r}
#### Simulated Data ####
simulated_data <-
  tibble(
    # Use 1 through to 338 to represent each division
    "Riding" = 1:338,
    # Randomly pick an option, with replacement, 338 times
    "Party" = sample(
      x = c("Liberal", "Conservative", "New Democratic", "Bloc Québécois", "Green", "Other"),
      size = 338,
      replace = TRUE
    )
  )

head(simulated_data)
tail(simulated_data)
```

```{r}
#### Read in the data ####
raw_can_elections_data <-
  read_csv(
    file = 
      "https://www.elections.ca/res/rep/off/ovr2021app/53/data_donnees/table_tableau11.csv",
    show_col_types = FALSE,
    skip = 0
  )

# Save the elections data from Elections Canada found at the worlds become data website. 
write_csv(
  x = raw_can_elections_data,
  file = "canadian_voting.csv"
)

head(raw_can_elections_data)

tail(raw_can_elections_data)
```

```{r}
#### Basic cleaning ####
raw_can_elections_data <-
  read_csv(
    file = "canadian_voting.csv",
    show_col_types = FALSE
  )
  
cleaned_can_elections_data <-
  clean_names(raw_can_elections_data)

head(cleaned_can_elections_data)
```

```{r}
#### select columns of interests  (riding names and winning candidates) ####

cleaned_can_elections_data <-
  cleaned_can_elections_data |>
  select(
    electoral_district_name_nom_de_circonscription,
    elected_candidate_candidat_elu
  )

head(cleaned_can_elections_data)
```

```{r}
#### Rename Columns ####

cleaned_can_elections_data <-
  cleaned_can_elections_data |>
  rename(
    riding = electoral_district_name_nom_de_circonscription,
    elected_party = elected_candidate_candidat_elu
  )

head(cleaned_can_elections_data)
```

```{r}
#### Seperate the party names from elected candidate column ####
cleaned_can_elections_data <-
  cleaned_can_elections_data |>
  separate(
    col = elected_party,
    into = c("Other", "party"),
    sep = "/"
  ) |>
  select(-Other)

head(cleaned_can_elections_data)
```

```{r}
#### Locate all Unique Party Names ####
cleaned_can_elections_data$party |>
  unique()
```

```{r}
#### Change party names from French to English ####
cleaned_can_elections_data <-
  cleaned_can_elections_data |>
  mutate(
    party =
      case_match(
        party,
        "Libéral" ~ "Liberal",
        "Conservateur" ~ "Conservative",
        "NPD-Nouveau Parti démocratique" ~ "New Deomocratic",
        "Bloc Québécois" ~ "Bloc Québécois",
        "Parti Vert" ~ "Green Party",
      )
  )
head(cleaned_can_elections_data)
```

```{r}
#### Write cleaned Canadian Elections Data ####
write_csv(
  x = cleaned_can_elections_data,
  file = "cleaned_can_elections_data.csv"
)
```

```{r}
#### Read in the data ####
cleaned_can_elections_data <-
  read_csv(
    file = "cleaned_can_elections_data.csv",
    show_col_types = FALSE
  )
```


```{r}
#### Generate count of each party's seats ####
cleaned_can_elections_data |>
  count(party)
```

```{r}
#### Construct Graph ####
cleaned_can_elections_data |>
  ggplot(aes(x = party)) +
  geom_bar() +
  theme_minimal() + # make theme minimal like example 
  labs(x = "Party", y = "Number of ridings won") # Make labels more meaningful like example
```



